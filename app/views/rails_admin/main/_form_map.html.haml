= javascript_fallback "//ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js", "/javascripts/rails_admin/jquery-1.5.1.min.js", "typeof jQuery == 'undefined'"

- if field.include_jquery
  = javascript_include_tag ("http://maps.googleapis.com/maps/api/js?key=#{field.google_api_key}&sensor=false&libraries=places")

= javascript_tag do
  :plain
    jQuery(function(){
      var marker = null;
      var latlng = new google.maps.LatLng(#{form.object.send(field.name) || field.default_latitude}, #{form.object.send(field.longitude_field) || field.default_longitude});

      var myOptions = {
        zoom: #{field.default_zoom_level},
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };

      var map = new google.maps.Map(document.getElementById("#{field.dom_name}"), myOptions);
      
  - if field.places_searchbox
    :plain
        var input = document.getElementById('mapSearchField');
        var autocomplete = new google.maps.places.Autocomplete(input);
        
        autocomplete.bindTo('bounds', map);
        
        google.maps.event.addListener(autocomplete, 'place_changed', function() {
          // Lets keep implementation to a viewport relocation only at this stage
          var place = autocomplete.getPlace();
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(14);
          }
        });

  - if form.object.send(field.name) && form.object.send(field.longitude_field)
    :plain
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(#{form.object.send(field.name)},#{form.object.send(field.longitude_field)}),
        map: map
      });

  :plain
      google.maps.event.addListener(map, 'click', function(e) {
        updateLocation(e.latLng);
      });

      function updateLocation(location) {
        if(marker) {
          marker.setPosition(location);
        } else {
          marker = new google.maps.Marker({
            position: location,
            map: map
          });
        }

        map.setCenter(location);
        jQuery("##{field.latitude_dom_name}").val(location.lat());
        jQuery("##{field.longitude_dom_name}").val(location.lng());
      }

    });
- if field.places_searchbox
  %div.map-input-select
    %input{:id => "mapSearchField", :onkeypress => "return event.keyCode!=13"}
%div.ramf-map-container{:id => field.dom_name, :style => "width:#{field.map_x.to_s}px;height:#{field.map_y.to_s}px"}
= form.send :hidden_field, field.name, :id => field.latitude_dom_name
= form.send :hidden_field, field.longitude_field, :id => field.longitude_dom_name